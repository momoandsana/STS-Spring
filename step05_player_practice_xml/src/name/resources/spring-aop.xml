<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!-- <bean class="exam.aop.AroundAdvice" id="aroundAdvice"/>
<bean class="exam.service.CustomerServiceImpl" id="target"/>
<bean class="exam.aop.SampleAdvice" id="sampleAdvice"/>

<aop:config>
	<aop:pointcut expression="execution(* exam.service.*Impl.*(..))" id="pointCut"/>
	
	<aop:aspect ref="aroundAdvice" order="2">
		<aop:around method="around" pointcut-ref="pointCut"/>
		 around 함수의 around 함수
	</aop:aspect>
	
	<aop:aspect ref="sampleAdvice" order="1">
		<aop:before method="before" pointcut-ref="pointCut"/>
		<aop:after method="afterFinally" pointcut-ref="pointCut"/> 
		
		<aop:after-returning method="afterReturning" pointcut-ref="pointCut" returning="returnObj"/>
		<aop:after-throwing method="afterThrowing" pointcut-ref="pointCut" throwing="e"/>
	</aop:aspect>
	
	
</aop:config>  -->


	<!-- 생성 & 주입 -->
	<context:component-scan base-package="exam"/>
	
	
	<!-- aop 설정 -->
	<aop:aspectj-autoproxy/>




</beans>
